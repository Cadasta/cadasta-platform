{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "Deployment": {
      "Type": "String",
      "Description": "Deployment name"
    },
    "AZ1": {
      "Type": "String",
      "Description": "Availability Zone 1 for RDS setup"
    },
    "AZ2": {
      "Type": "String",
      "Description": "Availability Zone 2 for RDS setup"
    },
    "Region": {
      "Type": "String",
      "Description": "AWS region for deployment"
    },
    "UID": {
      "Type": "String",
      "Description": "AWS user ID for deployment"
    },
    "DeployAMI": {
      "Type": "String",
      "Description": "AMI ID"
    },
    "EC2InstanceType": {
      "Type": "String",
      "Description": "EC2 instance type",
      "Default": "t2.micro"
    },
    "RDSInstanceType": {
      "Type": "String",
      "Description": "RDS instance type",
      "Default": "db.t2.micro"
    },
    "RDSStorage": {
      "Type": "Number",
      "Description": "RDS storage in Gb",
      "Default": 10
    },
    "DNSMain": {
      "Type": "String",
      "Description": "DNS domain name for main endpoint"
    },
    "DNSAPI": {
      "Type": "String",
      "Description": "DNS domain name for API endpoint"
    },
    "S3Bucket": {
      "Type": "String",
      "Description": "S3 bucket to use for resource storage"
    }
  },
  "Resources": {
    "vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [{ "Key": "Name",
                   "Value": {"Fn::Join": ["-", [{"Ref": "Deployment"},
                                                "vpc"]]} }]
      }
    },
    "pubsubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": {"Ref": "AZ1"},
        "VpcId": {"Ref": "vpc"},
        "Tags": [{ "Key": "Name",
                   "Value": {"Fn::Join": ["-", [{"Ref": "Deployment"},
                                                "public-subnet"]]} }]
      }
    },
    "privsubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": {"Ref": "AZ1"},
        "VpcId": {"Ref": "vpc"},
        "Tags": [{ "Key": "Name",
                   "Value": {"Fn::Join": ["-", [{"Ref": "Deployment"},
                                                "private-subnet-1"]]} }]
      }
    },
    "privsubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": {"Ref": "AZ2"},
        "VpcId": {"Ref": "vpc"},
        "Tags": [{"Key": "Name",
                  "Value": {"Fn::Join": ["-", [{"Ref": "Deployment"},
                                               "private-subnet-2"]]} }]
      }
    },
    "igw": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": { }
    },
    "dopt": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": {"Fn::Join": [".", [{"Ref": "Region"}, "compute.internal"]]},
        "DomainNameServers": ["AmazonProvidedDNS"]
      }
    },
    "acl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {"VpcId": {"Ref": "vpc"}}
    },
    "rtb": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {"VpcId": {"Ref": "vpc"}}
    },
    "eip": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": ["igw"],
      "Properties": {"Domain": "vpc"}
    },
    "role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            { "Effect": "Allow",
              "Principal": {"Service": ["ec2.amazonaws.com"]},
              "Action": ["sts:AssumeRole"] }
          ]
        }
      }
    },
    "policy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {"Fn::Join": ["-", [{"Ref": "Deployment"}, "policy"]]},
        "Roles": [{"Ref": "role"}],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            { "Effect": "Allow",
              "Action": ["s3:ListAllMyBuckets"],
              "Resource": ["arn:aws:s3:::*"] },
            { "Effect": "Allow",
              "Action": ["*"],
              "Resource": [{"Fn::Join": ["-", ["arn:aws:s3:::cadasta",
                                               {"Ref": "Deployment"},
                                               "bucket"]]}] },
            { "Effect": "Allow",
              "Action": ["*"],
              "Resource": [{"Fn::Join": ["-", ["arn:aws:s3:::cadasta",
                                               {"Ref": "Deployment"},
                                               "bucket/*"]]}] }
          ]
        }
      }
    },
    "instanceprofile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "role"}]
      }
    },
    "instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": {"Ref": "instanceprofile"},
        "ImageId": {"Ref": "DeployAMI"},
        "InstanceType": {"Ref": "EC2InstanceType"},
        "KeyName": "cadasta-utility",
        "Monitoring": "false",
        "Tags": [{ "Key": "Name",
                   "Value": {"Fn::Join": ["-", [{"Ref": "Deployment"},
                                                "ec2"]]} }],
        "NetworkInterfaces": [{
          "DeleteOnTermination": "true",
          "Description": "Primary network interface",
          "DeviceIndex": 0,
          "SubnetId": {"Ref": "pubsubnet"},
          "PrivateIpAddresses": [{"PrivateIpAddress": "10.0.0.92",
                                  "Primary": "true"}],
          "GroupSet": [{"Ref": "sgappsg"}]
        }]
      }
    },
    "rds": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": {"Ref": "RDSStorage"},
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": {"Ref": "RDSInstanceType"},
        "Port": "5432",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "7",
        "MasterUsername": "postgres",
        "MasterUserPassword": "postgres",
        "PreferredBackupWindow": "06:55-07:25",
        "PreferredMaintenanceWindow": "sat:08:14-sat:08:44",
        "Engine": "postgres",
        "EngineVersion": "9.4.4",
        "LicenseModel": "postgresql-license",
        "DBSubnetGroupName": {"Ref": "dbsubnetsubnetgroup"},
        "MultiAZ": "true",
        "VPCSecurityGroups": [{"Ref": "sgdbsg"}],
        "Tags": [{"Key": "workload-type", "Value": "other"}]
      }
    },
    "s3cadastabucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "BucketName": {"Ref": "S3Bucket"},
        "CorsConfiguration": {
          "CorsRules": [{
            "AllowedHeaders": ["Authorization"],
            "AllowedMethods": ["GET"],
            "AllowedOrigins": ["*"],
            "MaxAge": 3000
          }]
        },
        "VersioningConfiguration": {"Status": "Suspended"}
      }
    },
    "dbsubnetsubnetgroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": {"Fn::Join": [" ", [{"Ref": "Deployment"},
                                                        "DB subnet group"]]},
        "SubnetIds": [{"Ref": "privsubnet1"}, {"Ref": "privsubnet2"}]
      }
    },
    "sgappsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {"Fn::Join": [" ", [{"Ref": "Deployment"},
                                                "application SG"]]},
        "VpcId": {"Ref": "vpc"},
        "Tags": [{ "Key": "Name",
                   "Value": {"Fn::Join": ["-", [{"Ref": "Deployment"},
                                                "app-sg"]]} }]
      }
    },
    "sgdbsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Database SG",
        "VpcId": {"Ref": "vpc"},
        "Tags": [{ "Key": "Name",
                   "Value": {"Fn::Join": ["-", [{"Ref": "Deployment"},
                                                "db-sg"]]} }]
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0", "Egress": "true", "Protocol": "-1",
        "RuleAction": "allow", "RuleNumber": "100",
        "NetworkAclId": { "Ref": "acl" }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0", "Protocol": "-1",
        "RuleAction": "allow", "RuleNumber": "100",
        "NetworkAclId": { "Ref": "acl" }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {"Ref": "acl"}, "SubnetId": {"Ref": "privsubnet1"}
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {"Ref": "acl"}, "SubnetId": {"Ref": "privsubnet2"}
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {"Ref": "acl"}, "SubnetId": {"Ref": "pubsubnet"}
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "vpc"}, "InternetGatewayId": {"Ref": "igw"}
      }
    },
    "subnetroute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref": "rtb"}, "SubnetId": {"Ref": "pubsubnet"}
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {"Ref": "rtb"}, "GatewayId": {"Ref": "igw"}
      },
      "DependsOn": "igw"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {"Ref": "vpc"}, "DhcpOptionsId": {"Ref": "dopt"}
      }
    },
    "assoc1": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {"Fn::GetAtt": ["eip", "AllocationId"]},
        "InstanceId": {"Ref": "instance"}
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "sgappsg"},
        "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "sgappsg"},
        "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "sgdbsg"},
        "IpProtocol": "tcp", "FromPort": "5432", "ToPort": "5432",
        "SourceSecurityGroupId": {"Ref": "sgappsg"},
        "SourceSecurityGroupOwnerId": {"Ref": "UID"}
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {"Ref": "sgappsg"},
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {"Ref": "sgdbsg"},
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "dns1" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : "cadasta.org.",
        "Name" : {"Ref": "DNSMain"},
        "Type" : "A",
        "TTL" : "900",
        "ResourceRecords" : [{"Ref": "eip"}]
      }
    },
    "dns2" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : "cadasta.org.",
        "Name" : {"Ref": "DNSAPI"},
        "Type" : "A",
        "TTL" : "900",
        "ResourceRecords" : [{"Ref": "eip"}]
      }
    }
  },
  "Description": "Cadasta deployment template"
}
