upstream django {
    server unix:{{ uwsgi_socket }};
}

map $sent_http_content_type $expires {
    default                     off;
    text/html                   epoch;
    text/css                    24h;
    application/javascript      24h;
    ~image/                     24h;
}

server {
    listen      80; #force redirect to https for API URLs
    server_name {{ api_url }};
    return      301         https://{{ api_url }}$request_uri;
}

server {
    listen      80; #force redirect to https for platform URLs
    server_name {{ main_url }};
    return      301         https://{{ main_url }}$request_uri;
}

server {
    listen      443 ssl;
    server_name {{ api_url }};

    if ($http_host != "{{ api_url }}") {
        return 403;
    }

    ssl_certificate     /etc/ssl/private/domain.crt;
    ssl_certificate_key /etc/ssl/private/domain.key;

    charset     utf-8;
    proxy_set_header Host $http_host;
    proxy_set_header X-Url-Scheme $scheme;

    client_max_body_size 75M;

    # alias favicon.* to static
    location ~ ^/favicon.(\w*)$ {
        alias   {{ base_path }}static/img/favicon.png;
    }

    location /static/ {
        alias   {{ base_path }}static/;
    }

    location / {
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, PATCH, POST, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Access-Control-Allow-Origin,Content-Type';
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            add_header Access-Control-Max-Age 1728000;
            return 200;
        }

        uwsgi_pass  django;
        include     {{ application_path }}uwsgi_params;
        uwsgi_read_timeout 30;
        add_header 'X-Robots-Tag' 'noindex, nofollow, nosnippet, noarchive, noodp, noimageindex';
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, PATCH, POST, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Access-Control-Allow-Origin,Content-Type';
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen      443 ssl;
    server_name {{ main_url }};

    if ($http_host != "{{ main_url }}") {
        return 403;
    }

    ssl_certificate     /etc/ssl/private/domain.crt;
    ssl_certificate_key /etc/ssl/private/domain.key;

    expires $expires;
    etag on;
    add_header Cache-Control "private, must-revalidate";

    charset     utf-8;

    gzip                on;
    gzip_http_version   1.0;
    gzip_disable        "msie6";
    gzip_min_length     500;
    gzip_buffers        16 8k;
    gzip_proxied        expired no-cache no-store private;
    gzip_types          *;
    gzip_vary           on;

    client_max_body_size 75M;

    # alias favicon.* to static
    location ~ ^/favicon.(\w*)$ {
        alias   {{ base_path }}static/img/favicon.png;
    }

    location /static/ {
        alias   {{ base_path }}static/;
    }

    location / {
        uwsgi_pass  django;
        include {{ application_path }}uwsgi_params;
        add_header 'X-Robots-Tag' 'noindex, nofollow, nosnippet, noarchive, noodp, noimageindex';
    }
}
