- name: Add nginx/stable repository
  become: yes
  become_user: root
  apt_repository: repo='ppa:nginx/stable'

- name: Install packages
  become: yes
  become_user: root
  apt: pkg=nginx state=installed update_cache=yes

- name: Install packages
  become: yes
  become_user: root
  apt: pkg=python3-setuptools state=installed update_cache=yes

- name: Install global Python3 PIP
  become: yes
  become_user: root
  shell: easy_install3 pip

- name: Install global uWSGI
  become: yes
  become_user: root
  pip: name=uwsgi state=present executable=pip3

- name: Make sure uWSGI log directory exists
  become: yes
  become_user: root
  file: path=/var/log/uwsgi state=directory mode=755

- name: Make sure uWSGI vassals directory exists
  become: yes
  become_user: root
  file: path=/etc/uwsgi state=directory mode=755

- name: Set up uWSGI Upstart service definition
  become: yes
  become_user: root
  copy: src=uwsgi.conf dest=/etc/init/uwsgi.conf owner=root mode=644

- name: Start uWSGI emperor process
  become: yes
  become_user: root
  service: name=uwsgi state=restarted enabled=yes

- name: Write nginx configuration
  become: yes
  become_user: root
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf owner=root mode=664

- name: Create lists and security directories
  become: yes
  become_user: root
  file: path=/etc/nginx/{{ item }} state=directory
    owner=root
    group=root
    mode=775
  with_items:
    - lists
    - security

- name: Copy files for blocking bots and scanners
  become: yes
  become_user: root
  copy: src={{ item }} dest=/etc/nginx/{{ item }}
    owner=root
    group=root
    mode=664
  with_items:
    - lists/
    - security/

- name: Write Cadasta site configuration to sites-available
  become: yes
  become_user: root
  template: src=nginx-production
            dest="/etc/nginx/sites-available/cadasta"
  notify:
    - Restart nginx

- name: Enable Cadasta site
  become: yes
  become_user: root
  file: src="/etc/nginx/sites-available/cadasta"
        dest="/etc/nginx/sites-enabled/cadasta"
        state=link
  notify:
    - Restart nginx

- name: Load static data
  become: yes
  become_user: "{{ app_user }}"
  django_manage: command=loadstatic
                 app_path="{{ application_path }}cadasta"
                 virtualenv="{{ virtualenv_path }}"
                 settings="{{ django_settings }}"

- name: Compile and compress SASS files
  become: yes
  become_user: "{{ app_user }}"
  django_manage: command=compilescss
                 app_path="{{ application_path }}cadasta"
                 virtualenv="{{ virtualenv_path }}"
                 settings="{{ django_settings }}"

- name: Link static content
  become: yes
  become_user: "{{ app_user }}"
  django_manage: command=collectstatic
                 app_path="{{ application_path }}cadasta"
                 virtualenv="{{ virtualenv_path }}"
                 settings="{{ django_settings }}"

- name: Create cron job to prune MEDIA_ROOT files
  become: yes
  become_user: root
  cron: name="prune django media files" minute=5 hour=0
        user="root"
        job="find {{ base_path }}media -maxdepth 3 -type f -ctime +1 -exec rm {} \\; > /var/log/django/prune_media.log"

- name: Copy uwsgi_params to base directory
  become: yes
  become_user: "{{ app_user }}"
  copy: src=uwsgi_params
        dest="{{ application_path }}uwsgi_params"
        owner="{{ app_user }}" mode=644

- name: Set up uwsgi.ini file
  become: yes
  become_user: "{{ app_user }}"
  template: src=uwsgi.ini
            dest="{{ application_path }}uwsgi.ini"
            owner="{{ app_user }}" mode=644

- name: Make uWSGI vassal link
  become: yes
  become_user: root
  file: path=/etc/uwsgi/cadasta.ini
        src="{{ application_path }}uwsgi.ini"
        state=link
